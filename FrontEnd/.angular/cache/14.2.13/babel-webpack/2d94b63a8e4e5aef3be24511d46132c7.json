{"ast":null,"code":"import { APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InlineSVGModule } from 'ng-inline-svg-2';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthService } from './modules/auth/services/auth.service';\nimport { environment } from 'src/environments/environment'; // #fake-start#\n\nimport { FakeAPIService } from './_fake/fake-api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxTranslateModule } from './modules/i18n';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './modules/_interceptors/loading.interceptor';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { DatePipe } from '@angular/common';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { NgxPrintModule } from 'ngx-print';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"angular-in-memory-web-api\";\nimport * as i4 from \"ng-inline-svg-2\"; // #fake-end#\n\nfunction appInitializer(authService) {\n  return () => {\n    return new Promise(resolve => {\n      //@ts-ignore\n      authService.getUserByToken().subscribe().add(resolve);\n    });\n  };\n}\n\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: APP_INITIALIZER,\n      useFactory: appInitializer,\n      multi: true,\n      deps: [AuthService]\n    }, {\n      provide: MatDialogRef,\n      useValue: {}\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingInterceptor,\n      multi: true\n    }, DatePipe],\n    imports: [BrowserModule, MatIconModule, MatButtonModule, BrowserAnimationsModule, TranslateModule.forRoot(), HttpClientModule, ClipboardModule, QRCodeModule, MatDialogModule, MatFormFieldModule, MatInputModule, NgxPrintModule, ToastrModule.forRoot({\n      positionClass: 'toast-top-left',\n      closeButton: true,\n      newestOnTop: false,\n      progressBar: true,\n      preventDuplicates: false\n    }), // #fake-start#\n    environment.isMockEnabled ? HttpClientInMemoryWebApiModule.forRoot(FakeAPIService, {\n      passThruUnknownUrl: true,\n      dataEncapsulation: false\n    }) : [], // #fake-end#\n    AppRoutingModule, InlineSVGModule.forRoot(), NgbModule, FormsModule, ReactiveFormsModule, NgxTranslateModule, // TranslateModule.forRoot({\n    //   defaultLanguage: 'en',\n    //   loader: {\n    //      provide: TranslateLoader,\n    //      useFactory: httpTranslateLoader,\n    //      deps: [HttpClient]\n    //      }\n    //   }),\n    NgxSpinnerModule, NgSelectModule, AngularEditorModule, NgxTranslateModule, NgxSpinnerModule, NgSelectModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}