{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginComponent } from './modules/home/auth/login/login.component';\nimport { AuthGuard } from './modules/auth/services/auth.guard';\nimport { LoginAuthGuard } from './modules/auth/services/login.auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const routes = [// {\n//   path: 'auth',\n//   loadChildren: () =>\n//     import('./modules/auth/auth.module').then((m) => m.AuthModule),\n// },\n// {\n//   path: 'error',\n//   loadChildren: () =>\n//     import('./modules/errors/errors.module').then((m) => m.ErrorsModule),\n// },\n// {path:'',redirectTo:'dashboard', pathMatch:'full'},\n// {path:'login',component:LoginComponent},\n{\n  path: 'login',\n  component: LoginComponent,\n  canActivate: [LoginAuthGuard]\n}, {\n  path: '',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./_metronic/layout/layout.module').then(m => m.LayoutModule)\n}, {\n  path: '**',\n  redirectTo: 'error/404'\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [AuthGuard],\n    imports: [RouterModule.forRoot(routes, {\n      useHash: true\n    }), RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}