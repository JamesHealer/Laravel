{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/editorwatchdog\n */\n\n/* globals console */\nimport { throttle, cloneDeepWith, isElement } from 'lodash-es';\nimport areConnectedThroughProperties from './utils/areconnectedthroughproperties';\nimport Watchdog from './watchdog';\n/**\n * A watchdog for CKEditor 5 editors.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n *\n * @extends {module:watchdog/watchdog~Watchdog}\n */\n\nexport default class EditorWatchdog extends Watchdog {\n  /**\n   * @param {*} Editor The editor class.\n   * @param {module:watchdog/watchdog~WatchdogConfig} [watchdogConfig] The watchdog plugin configuration.\n   */\n  constructor(Editor, watchdogConfig = {}) {\n    super(watchdogConfig);\n    /**\n     * The current editor instance.\n     *\n     * @private\n     * @type {module:core/editor/editor~Editor}\n     */\n\n    this._editor = null;\n    /**\n     * Throttled save method. The `save()` method is called the specified `saveInterval` after `throttledSave()` is called,\n     * unless a new action happens in the meantime.\n     *\n     * @private\n     * @type {Function}\n     */\n\n    this._throttledSave = throttle(this._save.bind(this), typeof watchdogConfig.saveInterval === 'number' ? watchdogConfig.saveInterval : 5000);\n    /**\n     * The latest saved editor data represented as a root name -> root data object.\n     *\n     * @private\n     * @member {Object.<String,String>} #_data\n     */\n\n    /**\n     * The last document version.\n     *\n     * @private\n     * @member {Number} #_lastDocumentVersion\n     */\n\n    /**\n     * The editor source element or data.\n     *\n     * @private\n     * @member {HTMLElement|String|Object.<String|String>} #_elementOrData\n     */\n\n    /**\n     * The editor configuration.\n     *\n     * @private\n     * @member {Object|undefined} #_config\n     */\n    // Set default creator and destructor functions:\n\n    this._creator = (elementOrData, config) => Editor.create(elementOrData, config);\n\n    this._destructor = editor => editor.destroy();\n  }\n  /**\n   * The current editor instance.\n   *\n   * @readonly\n   * @type {module:core/editor/editor~Editor}\n   */\n\n\n  get editor() {\n    return this._editor;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  get _item() {\n    return this._editor;\n  }\n  /**\n   * Sets the function that is responsible for the editor creation.\n   * It expects a function that should return a promise.\n   *\n   *\t\twatchdog.setCreator( ( element, config ) => ClassicEditor.create( element, config ) );\n   *\n   * @method #setCreator\n   * @param {Function} creator\n   */\n\n  /**\n   * Sets the function that is responsible for the editor destruction.\n   * Overrides the default destruction function, which destroys only the editor instance.\n   * It expects a function that should return a promise or `undefined`.\n   *\n   *\t\twatchdog.setDestructor( editor => {\n   *\t\t\t// Do something before the editor is destroyed.\n   *\n   *\t\t\treturn editor\n   *\t\t\t\t.destroy()\n   *\t\t\t\t.then( () => {\n   *\t\t\t\t\t// Do something after the editor is destroyed.\n   *\t\t\t\t} );\n   *\t\t} );\n   *\n   * @method #setDestructor\n   * @param {Function} destructor\n   */\n\n  /**\n   * Restarts the editor instance. This method is called whenever an editor error occurs. It fires the `restart` event and changes\n   * the state to `initializing`.\n   *\n   * @protected\n   * @fires restart\n   * @returns {Promise}\n   */\n\n\n  _restart() {\n    return Promise.resolve().then(() => {\n      this.state = 'initializing';\n\n      this._fire('stateChange');\n\n      return this._destroy();\n    }).catch(err => {\n      console.error('An error happened during the editor destroying.', err);\n    }).then(() => {\n      if (typeof this._elementOrData === 'string') {\n        return this.create(this._data, this._config, this._config.context);\n      } else {\n        const updatedConfig = Object.assign({}, this._config, {\n          initialData: this._data\n        });\n        return this.create(this._elementOrData, updatedConfig, updatedConfig.context);\n      }\n    }).then(() => {\n      this._fire('restart');\n    });\n  }\n  /**\n   * Creates the editor instance and keeps it running, using the defined creator and destructor.\n   *\n   * @param {HTMLElement|String|Object.<String|String>} [elementOrData] The editor source element or the editor data.\n   * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n   * @param {Object} [context] A context for the editor.\n   *\n   * @returns {Promise}\n   */\n\n\n  create(elementOrData = this._elementOrData, config = this._config, context) {\n    return Promise.resolve().then(() => {\n      super._startErrorHandling();\n\n      this._elementOrData = elementOrData; // Clone configuration because it might be shared within multiple watchdog instances. Otherwise,\n      // when an error occurs in one of these editors, the watchdog will restart all of them.\n\n      this._config = this._cloneEditorConfiguration(config) || {};\n      this._config.context = context;\n      return this._creator(elementOrData, this._config);\n    }).then(editor => {\n      this._editor = editor;\n      editor.model.document.on('change:data', this._throttledSave);\n      this._lastDocumentVersion = editor.model.document.version;\n      this._data = this._getData();\n      this.state = 'ready';\n\n      this._fire('stateChange');\n    });\n  }\n  /**\n   * Destroys the watchdog and the current editor instance. It fires the callback\n   * registered in {@link #setDestructor `setDestructor()`} and uses it to destroy the editor instance.\n   * It also sets the state to `destroyed`.\n   *\n   * @returns {Promise}\n   */\n\n\n  destroy() {\n    return Promise.resolve().then(() => {\n      this.state = 'destroyed';\n\n      this._fire('stateChange');\n\n      super.destroy();\n      return this._destroy();\n    });\n  }\n  /**\n   * @private\n   * @returns {Promise}\n   */\n\n\n  _destroy() {\n    return Promise.resolve().then(() => {\n      this._stopErrorHandling(); // Save data if there is a remaining editor data change.\n\n\n      this._throttledSave.flush();\n\n      const editor = this._editor;\n      this._editor = null; // Remove the `change:data` listener before destroying the editor.\n      // Incorrectly written plugins may trigger firing `change:data` events during the editor destruction phase\n      // causing the watchdog to call `editor.getData()` when some parts of editor are already destroyed.\n\n      editor.model.document.off('change:data', this._throttledSave);\n      return this._destructor(editor);\n    });\n  }\n  /**\n   * Saves the editor data, so it can be restored after the crash even if the data cannot be fetched at\n   * the moment of the crash.\n   *\n   * @private\n   */\n\n\n  _save() {\n    const version = this._editor.model.document.version;\n\n    try {\n      this._data = this._getData();\n      this._lastDocumentVersion = version;\n    } catch (err) {\n      console.error(err, 'An error happened during restoring editor data. ' + 'Editor will be restored from the previously saved data.');\n    }\n  }\n  /**\n   * @protected\n   * @param {Set} props\n   */\n\n\n  _setExcludedProperties(props) {\n    this._excludedProps = props;\n  }\n  /**\n   * Returns the editor data.\n   *\n   * @private\n   * @returns {Object<String,String>}\n   */\n\n\n  _getData() {\n    const data = {};\n\n    for (const rootName of this._editor.model.document.getRootNames()) {\n      data[rootName] = this._editor.data.get({\n        rootName\n      });\n    }\n\n    return data;\n  }\n  /**\n   * Traverses the error context and the current editor to find out whether these structures are connected\n   * to each other via properties.\n   *\n   * @protected\n   * @param {module:utils/ckeditorerror~CKEditorError} error\n   */\n\n\n  _isErrorComingFromThisItem(error) {\n    return areConnectedThroughProperties(this._editor, error.context, this._excludedProps);\n  }\n  /**\n   * Clones the editor configuration.\n   *\n   * @private\n   * @param {Object} config\n   */\n\n\n  _cloneEditorConfiguration(config) {\n    return cloneDeepWith(config, (value, key) => {\n      // Leave DOM references.\n      if (isElement(value)) {\n        return value;\n      }\n\n      if (key === 'context') {\n        return value;\n      }\n    });\n  }\n  /**\n   * Fired after the watchdog restarts the error in case of a crash.\n   *\n   * @event restart\n   */\n\n\n}","map":{"version":3,"names":["throttle","cloneDeepWith","isElement","areConnectedThroughProperties","Watchdog","EditorWatchdog","constructor","Editor","watchdogConfig","_editor","_throttledSave","_save","bind","saveInterval","_creator","elementOrData","config","create","_destructor","editor","destroy","_item","_restart","Promise","resolve","then","state","_fire","_destroy","catch","err","console","error","_elementOrData","_data","_config","context","updatedConfig","Object","assign","initialData","_startErrorHandling","_cloneEditorConfiguration","model","document","on","_lastDocumentVersion","version","_getData","_stopErrorHandling","flush","off","_setExcludedProperties","props","_excludedProps","data","rootName","getRootNames","get","_isErrorComingFromThisItem","value","key"],"sources":["I:/DESourceCode/GitHubApril2022/KupfAngular1/node_modules/@ckeditor/ckeditor5-watchdog/src/editorwatchdog.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module watchdog/editorwatchdog\n */\n\n/* globals console */\n\nimport { throttle, cloneDeepWith, isElement } from 'lodash-es';\nimport areConnectedThroughProperties from './utils/areconnectedthroughproperties';\nimport Watchdog from './watchdog';\n\n/**\n * A watchdog for CKEditor 5 editors.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n *\n * @extends {module:watchdog/watchdog~Watchdog}\n */\nexport default class EditorWatchdog extends Watchdog {\n\t/**\n\t * @param {*} Editor The editor class.\n\t * @param {module:watchdog/watchdog~WatchdogConfig} [watchdogConfig] The watchdog plugin configuration.\n\t */\n\tconstructor( Editor, watchdogConfig = {} ) {\n\t\tsuper( watchdogConfig );\n\n\t\t/**\n\t\t * The current editor instance.\n\t\t *\n\t\t * @private\n\t\t * @type {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis._editor = null;\n\n\t\t/**\n\t\t * Throttled save method. The `save()` method is called the specified `saveInterval` after `throttledSave()` is called,\n\t\t * unless a new action happens in the meantime.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._throttledSave = throttle(\n\t\t\tthis._save.bind( this ),\n\t\t\ttypeof watchdogConfig.saveInterval === 'number' ? watchdogConfig.saveInterval : 5000\n\t\t);\n\n\t\t/**\n\t\t * The latest saved editor data represented as a root name -> root data object.\n\t\t *\n\t\t * @private\n\t\t * @member {Object.<String,String>} #_data\n\t\t */\n\n\t\t/**\n\t\t * The last document version.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_lastDocumentVersion\n\t\t */\n\n\t\t/**\n\t\t * The editor source element or data.\n\t\t *\n\t\t * @private\n\t\t * @member {HTMLElement|String|Object.<String|String>} #_elementOrData\n\t\t */\n\n\t\t/**\n\t\t * The editor configuration.\n\t\t *\n\t\t * @private\n\t\t * @member {Object|undefined} #_config\n\t\t */\n\n\t\t// Set default creator and destructor functions:\n\t\tthis._creator = ( ( elementOrData, config ) => Editor.create( elementOrData, config ) );\n\t\tthis._destructor = editor => editor.destroy();\n\t}\n\n\t/**\n\t * The current editor instance.\n\t *\n\t * @readonly\n\t * @type {module:core/editor/editor~Editor}\n\t */\n\tget editor() {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget _item() {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * Sets the function that is responsible for the editor creation.\n\t * It expects a function that should return a promise.\n\t *\n\t *\t\twatchdog.setCreator( ( element, config ) => ClassicEditor.create( element, config ) );\n\t *\n\t * @method #setCreator\n\t * @param {Function} creator\n\t */\n\n\t/**\n\t * Sets the function that is responsible for the editor destruction.\n\t * Overrides the default destruction function, which destroys only the editor instance.\n\t * It expects a function that should return a promise or `undefined`.\n\t *\n\t *\t\twatchdog.setDestructor( editor => {\n\t *\t\t\t// Do something before the editor is destroyed.\n\t *\n\t *\t\t\treturn editor\n\t *\t\t\t\t.destroy()\n\t *\t\t\t\t.then( () => {\n\t *\t\t\t\t\t// Do something after the editor is destroyed.\n\t *\t\t\t\t} );\n\t *\t\t} );\n\t *\n\t * @method #setDestructor\n\t * @param {Function} destructor\n\t */\n\n\t/**\n\t * Restarts the editor instance. This method is called whenever an editor error occurs. It fires the `restart` event and changes\n\t * the state to `initializing`.\n\t *\n\t * @protected\n\t * @fires restart\n\t * @returns {Promise}\n\t */\n\t_restart() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'initializing';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\treturn this._destroy();\n\t\t\t} )\n\t\t\t.catch( err => {\n\t\t\t\tconsole.error( 'An error happened during the editor destroying.', err );\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tif ( typeof this._elementOrData === 'string' ) {\n\t\t\t\t\treturn this.create( this._data, this._config, this._config.context );\n\t\t\t\t} else {\n\t\t\t\t\tconst updatedConfig = Object.assign( {}, this._config, {\n\t\t\t\t\t\tinitialData: this._data\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn this.create( this._elementOrData, updatedConfig, updatedConfig.context );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tthis._fire( 'restart' );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates the editor instance and keeps it running, using the defined creator and destructor.\n\t *\n\t * @param {HTMLElement|String|Object.<String|String>} [elementOrData] The editor source element or the editor data.\n\t * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n\t * @param {Object} [context] A context for the editor.\n\t *\n\t * @returns {Promise}\n\t */\n\tcreate( elementOrData = this._elementOrData, config = this._config, context ) {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tsuper._startErrorHandling();\n\n\t\t\t\tthis._elementOrData = elementOrData;\n\n\t\t\t\t// Clone configuration because it might be shared within multiple watchdog instances. Otherwise,\n\t\t\t\t// when an error occurs in one of these editors, the watchdog will restart all of them.\n\t\t\t\tthis._config = this._cloneEditorConfiguration( config ) || {};\n\n\t\t\t\tthis._config.context = context;\n\n\t\t\t\treturn this._creator( elementOrData, this._config );\n\t\t\t} )\n\t\t\t.then( editor => {\n\t\t\t\tthis._editor = editor;\n\n\t\t\t\teditor.model.document.on( 'change:data', this._throttledSave );\n\n\t\t\t\tthis._lastDocumentVersion = editor.model.document.version;\n\t\t\t\tthis._data = this._getData();\n\n\t\t\t\tthis.state = 'ready';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the watchdog and the current editor instance. It fires the callback\n\t * registered in {@link #setDestructor `setDestructor()`} and uses it to destroy the editor instance.\n\t * It also sets the state to `destroyed`.\n\t *\n\t * @returns {Promise}\n\t */\n\tdestroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'destroyed';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\tsuper.destroy();\n\n\t\t\t\treturn this._destroy();\n\t\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t * @returns {Promise}\n\t */\n\t_destroy() {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis._stopErrorHandling();\n\n\t\t\t\t// Save data if there is a remaining editor data change.\n\t\t\t\tthis._throttledSave.flush();\n\n\t\t\t\tconst editor = this._editor;\n\n\t\t\t\tthis._editor = null;\n\n\t\t\t\t// Remove the `change:data` listener before destroying the editor.\n\t\t\t\t// Incorrectly written plugins may trigger firing `change:data` events during the editor destruction phase\n\t\t\t\t// causing the watchdog to call `editor.getData()` when some parts of editor are already destroyed.\n\t\t\t\teditor.model.document.off( 'change:data', this._throttledSave );\n\n\t\t\t\treturn this._destructor( editor );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Saves the editor data, so it can be restored after the crash even if the data cannot be fetched at\n\t * the moment of the crash.\n\t *\n\t * @private\n\t */\n\t_save() {\n\t\tconst version = this._editor.model.document.version;\n\n\t\ttry {\n\t\t\tthis._data = this._getData();\n\t\t\tthis._lastDocumentVersion = version;\n\t\t} catch ( err ) {\n\t\t\tconsole.error(\n\t\t\t\terr,\n\t\t\t\t'An error happened during restoring editor data. ' +\n\t\t\t\t'Editor will be restored from the previously saved data.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t * @param {Set} props\n\t */\n\t_setExcludedProperties( props ) {\n\t\tthis._excludedProps = props;\n\t}\n\n\t/**\n\t * Returns the editor data.\n\t *\n\t * @private\n\t * @returns {Object<String,String>}\n\t */\n\t_getData() {\n\t\tconst data = {};\n\n\t\tfor ( const rootName of this._editor.model.document.getRootNames() ) {\n\t\t\tdata[ rootName ] = this._editor.data.get( { rootName } );\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * Traverses the error context and the current editor to find out whether these structures are connected\n\t * to each other via properties.\n\t *\n\t * @protected\n\t * @param {module:utils/ckeditorerror~CKEditorError} error\n\t */\n\t_isErrorComingFromThisItem( error ) {\n\t\treturn areConnectedThroughProperties( this._editor, error.context, this._excludedProps );\n\t}\n\n\t/**\n\t * Clones the editor configuration.\n\t *\n\t * @private\n\t * @param {Object} config\n\t */\n\t_cloneEditorConfiguration( config ) {\n\t\treturn cloneDeepWith( config, ( value, key ) => {\n\t\t\t// Leave DOM references.\n\t\t\tif ( isElement( value ) ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif ( key === 'context' ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Fired after the watchdog restarts the error in case of a crash.\n\t *\n\t * @event restart\n\t */\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}