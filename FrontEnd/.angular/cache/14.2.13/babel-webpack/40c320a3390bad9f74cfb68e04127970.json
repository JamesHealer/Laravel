{"ast":null,"code":"import { map, BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(httpClient, router, toastr) {\n      this.httpClient = httpClient;\n      this.router = router;\n      this.toastr = toastr; // Getting base URL of Api from enviroment.\n\n      this.baseUrl = environment.KUPFApiUrl;\n      this.isLoadingSubject = new BehaviorSubject(false); //\n\n      this.menuHeading = [];\n      this.occupationsDto = [];\n    } // Get user funtions by user Id... this.baseUrl +`FinancialService/GetFinancialServiceById?transId=`\n\n\n    GetUserFunctionsByUserId(id) {\n      return this.httpClient.get(this.baseUrl + `Login/GetUserFunctionsByUserId?id=${id}`).pipe(map(menuHeading => {\n        this.menuHeading = menuHeading;\n        return menuHeading;\n      }));\n    } // https://kupfapi.erp53.com/api/Common/RefreshUpdatedData?tenentid=21\n\n\n    RefreshUpdatedData(tId) {\n      return this.httpClient.get(this.baseUrl + `Common/RefreshUpdatedData?id=${tId}`);\n    }\n\n    set isLoading(isLoading) {\n      this.isLoadingSubject.next(isLoading);\n    }\n\n    get isLoading$() {\n      return this.isLoadingSubject.asObservable();\n    } // Login\n\n\n    Login(model) {\n      console.log(this.baseUrl); //return this.httpClient.get<Login[]>('/app/_fake/fake_users.json');\n      //return this.httpClient.get<Login[]>('/assets/fake_users.json');\n\n      this.isLoading = true;\n      return this.httpClient.post(this.baseUrl + `Login/EmployeeLogin`, {\n        tenentId: model[0],\n        username: model[1],\n        password: model[2]\n      }).pipe(map(loginDto => {\n        this.loginDto = loginDto;\n        return loginDto;\n      }));\n    }\n\n    logout() {\n      this.router.navigateByUrl('/login');\n      localStorage.removeItem('user');\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastrService));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}