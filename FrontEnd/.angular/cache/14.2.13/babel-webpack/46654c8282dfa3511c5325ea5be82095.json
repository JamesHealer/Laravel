{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/modules/_services/user-functions.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"src/app/modules/_services/common.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"ngx-bootstrap/datepicker\";\n\nconst _c0 = function () {\n  return {\n    dateInputFormat: \"YYYY-MM\"\n  };\n};\n\nexport let YearlyProcessComponent = /*#__PURE__*/(() => {\n  class YearlyProcessComponent {\n    constructor(_userFunctionsService, toastr, commonService) {\n      this._userFunctionsService = _userFunctionsService;\n      this.toastr = toastr;\n      this.commonService = commonService; // We will get form lables from lcale storage and will put into array.\n\n      this.AppFormLabels = []; // We will filter form header labels array\n\n      this.formHeaderLabels = [];\n      this.lang = ''; // We will filter form body labels array\n\n      this.formBodyLabels = [];\n    }\n\n    ngOnInit() {\n      this.commonService.getLang().subscribe(lang => {\n        this.lang = lang;\n      }); //#region TO SETUP THE FORM LOCALIZATION    \n      // TO GET THE LANGUAGE ID e.g. 1 = ENGLISH and 2 =  ARABIC\n\n      this.languageType = localStorage.getItem('langType'); // To get the selected language...\n\n      this.language = localStorage.getItem('lang'); // To setup the form id so will will get form labels based on form Id\n\n      this.formId = 'YearlyProcess'; // Check if LocalStorage is Not NULL\n\n      if (localStorage.getItem('AppLabels') != null) {\n        // Get data from LocalStorage\n        this.AppFormLabels = JSON.parse(localStorage.getItem('AppLabels') || '{}');\n\n        for (let labels of this.AppFormLabels) {\n          if (labels.formID == this.formId) {\n            this.formHeaderLabels.push(labels);\n            const jsonFormTitleDTLanguage = labels.formTitleDTLanguage.reduce((result, element) => {\n              result[element.labelId] = element;\n              return result;\n            }, {});\n            this.formBodyLabels.push(jsonFormTitleDTLanguage);\n          }\n        }\n\n        console.log(this.formBodyLabels);\n      }\n\n      this.nextPeriodCode = JSON.parse(localStorage.getItem('user') || '{}')[0].nextPeriodCode;\n      this.username = JSON.parse(localStorage.getItem('user') || '{}')[0].username;\n    }\n\n    onOpenCalendar(container) {\n      container.monthSelectHandler = event => {\n        container._store.dispatch(container._actions.select(event.date));\n      };\n\n      container.setViewMode('month');\n    }\n\n    calculateYearlyProcessForMembership() {\n      this._userFunctionsService.calculateYearlyProcessForMembership(this.nextPeriodCode, this.username).subscribe(res => {\n        if (res.result > 0) {\n          this.toastr.success(res.message);\n        } else {\n          this.toastr.warning(res.message);\n        }\n      }, error => {\n        this.toastr.error(\"Something went wrong!!\");\n      });\n    }\n\n  }\n\n  YearlyProcessComponent.ɵfac = function YearlyProcessComponent_Factory(t) {\n    return new (t || YearlyProcessComponent)(i0.ɵɵdirectiveInject(i1.UserFunctionsService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.CommonService));\n  };\n\n  YearlyProcessComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: YearlyProcessComponent,\n    selectors: [[\"app-yearly-process\"]],\n    decls: 19,\n    vars: 6,\n    consts: [[1, \"card\", \"mb-5\", \"mb-xl-8\"], [1, \"card-header\", \"border-0\", \"pt-5\", \"panel3bgColor\"], [1, \"card-toolbar\"], [\"lang\", \"AR-SA\", 1, \"text-dark\", \"ArFontStyle\"], [1, \"card-body\", \"py-3\"], [1, \"row\", \"mb-4\"], [1, \"col-lg-6\", \"fv-row\"], [\"lang\", \"AR-SA\", 1, \"col-lg-6\", \"col-form-label\", \"fw-bold\", \"fs-6\", \"ArFontStyle\"], [1, \"input-group\"], [\"id\", \"basic-addon1\", 1, \"input-group-text\"], [1, \"fas\", \"fa-calendar\"], [\"type\", \"text\", \"bsDatepicker\", \"\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"bsConfig\", \"ngModelChange\", \"onShown\"], [1, \"d-flex\", \"justify-content-between\", \"gap-4\", \"my-4\"], [1, \"card-title\", \"align-items-start\", \"flex-column\"], [\"role\", \"group\", \"aria-label\", \"Basic example\", 1, \"btn-group\"], [\"type\", \"button\", \"lang\", \"AR-SA\", 1, \"btn\", \"btn-primary\", \"ArFontStyle\", 3, \"click\"]],\n    template: function YearlyProcessComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"span\", 9);\n        i0.ɵɵelement(12, \"i\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function YearlyProcessComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.nextPeriodCode = $event;\n        })(\"onShown\", function YearlyProcessComponent_Template_input_onShown_13_listener($event) {\n          return ctx.onOpenCalendar($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 12)(15, \"h3\", 13)(16, \"div\", 14)(17, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function YearlyProcessComponent_Template_button_click_17_listener() {\n          return ctx.calculateYearlyProcessForMembership();\n        });\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.lang == \"en\" ? ctx.formBodyLabels[0].lblYearlyProcess.title : ctx.formBodyLabels[1].lblYearlyProcess.title);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.lang == \"en\" ? ctx.formBodyLabels[0].lblPeriodCode.title : ctx.formBodyLabels[1].lblPeriodCode.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.nextPeriodCode)(\"bsConfig\", i0.ɵɵpureFunction0(5, _c0));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.lang == \"en\" ? ctx.formBodyLabels[0].btnSubmit.title : ctx.formBodyLabels[1].btnSubmit.title);\n      }\n    },\n    dependencies: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.BsDatepickerDirective, i5.BsDatepickerInputDirective],\n    styles: [\".panel3bgColor[_ngcontent-%COMP%]{background-color:#2de02d}.yearlyProcessTableHeader[_ngcontent-%COMP%]{background-color:#5bdf5b}\"]\n  });\n  return YearlyProcessComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}