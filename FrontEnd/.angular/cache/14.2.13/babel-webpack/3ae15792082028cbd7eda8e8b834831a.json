{"ast":null,"code":"import _asyncToGenerator from \"I:/DESourceCode/GitHubApril2022/KupfAngular1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as Papa from 'papaparse';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CsvParserService = /*#__PURE__*/(() => {\n  class CsvParserService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseUrl = environment.KUPFApiUrl;\n    }\n\n    parseCsv(csvData) {\n      return new Promise((resolve, reject) => {\n        Papa.parse(csvData, {\n          header: true,\n          complete: result => {\n            resolve(result);\n          },\n          error: error => {\n            reject(error);\n          }\n        });\n      });\n    }\n\n    postEmployee(endPoint, employee) {\n      return new Promise((resolve, reject) => {\n        this.httpClient.post(this.baseUrl + endPoint, employee).subscribe({\n          next(res) {\n            console.log('==>', res);\n          },\n\n          error(msg) {\n            console.log('==>', msg);\n          }\n\n        });\n      });\n    }\n\n    postCsvData(endPoint, csvData) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        /** api/Employee/AddEmployee */\n        for (var employee of csvData) yield _this.postEmployee(endPoint, employee);\n      })();\n    }\n\n  }\n\n  CsvParserService.ɵfac = function CsvParserService_Factory(t) {\n    return new (t || CsvParserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CsvParserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CsvParserService,\n    factory: CsvParserService.ɵfac,\n    providedIn: 'root'\n  });\n  return CsvParserService;\n})();","map":null,"metadata":{},"sourceType":"module"}